<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="KSS_ADMIN">
	<resultMap type="KssAdminDO" id="kssAdminResult">
		<id property="id" column="ID" jdbcType="INTEGER" />
		<result property="parentid" column="PARENTID" jdbcType="INTEGER" />
		<result property="level" column="LEVEL" jdbcType="INTEGER" />
		<result property="del" column="ISDEL" jdbcType="BOOLEAN" />
		<result property="username" column="USERNAME" jdbcType="VARCHAR" />
		<result property="password" column="PASSWORD" jdbcType="VARCHAR" />
		<result property="lock" column="ISLOCK" jdbcType="BOOLEAN" />
		<result property="addtime" column="ADDTIME" jdbcType="TIMESTAMP" />
		<result property="lastlogintime" column="LASTLOGINTIME" jdbcType="TIMESTAMP" />
		<result property="lastloginip" column="LASTLOGINIP" jdbcType="INTEGER" />
		<result property="powerlist" column="POWERLIST" jdbcType="VARCHAR" />
		<result property="money" column="money" jdbcType="DECIMAL" />
		<result property="exmoney" column="EXMONEY" jdbcType="DECIMAL" />
	</resultMap>
	
	<insert id="insert" parameterType="KssAdminDO">
		INSERT INTO KSS_ADMIN (
		parentid,
		level,
		username,
		password,
		addtime,
		lastlogintime,
		money)
		VALUES (
		#{parentid},
		#{level},
		#{username},
		#{password},
		#{addtime},
		#{lastlogintime},
		#{money})
	</insert>

	<update id="updatePassword" parameterType="java.util.Map">
		UPDATE KSS_ADMIN
		<set>
			password = #{password}
		</set>
		where id=#{id}
	</update>

	<update id="updateLock" parameterType="java.util.Map">
		UPDATE KSS_ADMIN
		<set>
			islock = #{islock}
		</set>
		where id=#{id}
	</update>

	<update id="updateLastLogin" parameterType="java.util.Map">
		UPDATE KSS_ADMIN
		<set>
			lastlogintime = #{lastlogintime},
			lastloginip = #{lastloginip}
		</set>
		WHERE
		id=#{id}
	</update>
	
	<update id="updatePowerlist" parameterType="java.util.Map">
		UPDATE KSS_ADMIN
		<set>
			powerlist = #{powerlist}
		</set>
		where id=#{id}
	</update>
	
	<update id="updateMoney" parameterType="java.util.Map">
		UPDATE KSS_ADMIN
		<set>
			money = #{money},
			exmoney = #{exmoney}
		</set>
		where id=#{id}
	</update>


	<select id="selectById" parameterType="long" resultMap="kssAdminResult">
		select
		* from KSS_ADMIN WHERE id=#{id} and isdel=0
	</select>

	<delete id="deleteById" parameterType="long">
		update KSS_ADMIN
		<set>
			isdel = 1
		</set>
		WHERE ID=#{id}
	</delete>

	<update id="deleteByIds" parameterType="java.util.List">
		update KSS_ADMIN
		<set>
			isdel = 1
		</set>
		WHERE ID in
		<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>

	<select id="selectCountByQueryCondition" parameterType="java.util.Map" resultType="long">
		select COUNT(*) from KSS_ADMIN
		<include refid="QueryCondition" />
	</select>

	<select id="selectByQueryCondition" parameterType="java.util.Map" resultMap="kssAdminResult">
		SELECT * FROM KSS_ADMIN
		<include refid="QueryCondition" />
		<include refid="Pagination" />
	</select>


	<!-- 查询条件 -->
	<sql id="QueryCondition">
		<trim prefix="where" prefixOverrides="and|or">
			<if test="parentid != null">
				and PARENTID = #{parentid}
			</if>
			<if test="adminid != null">
				and adminid = #{adminid}
			</if>
			<if test="username != null">
				and USERNAME = #{username}
			</if>
			<if test="ids != null">
				and ID in
				<foreach collection="list" item="ids" index="index" open="(" close=")" separator=",">
					#{ids}
				</foreach>
			</if>
			 	and isdel=0
		</trim>
	</sql>

	<!-- 分页 -->
	<sql id="Pagination">
		<if test="startIndex != null and pageSize != null">
			LIMIT #{startIndex},#{pageSize}
		</if>
	</sql>

</mapper>
